apiVersion: v1
kind: Namespace
metadata:
  name: starcry
  annotations:
    scheduler.alpha.kubernetes.io/node-selector: server=deskmini
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: starcry
  namespace: starcry
spec:
  selector:
    matchLabels:
      app: starcry
      tier: starcry
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: starcry
        tier: starcry
    spec:
      initContainers:
      - name: check-redis-reachable
        image: busybox:latest
        command: ['sh', '-c',
          'until nc -vz redis 6379; do echo "Waiting for redis service"; sleep 2; done;']
      containers:
      - name: starcrycontainer
        # image: docker.io/rayburgemeestre/build-starcry-ubuntu:22.04
        image: docker.io/rayburgemeestre/starcry:v9
        command: ["/workdir/docs/starcry-dev-wrapper.sh"]
        args: ["--dev", "-i", "-t", "0", "-c", "8", "--stdout", "--server", "tcp://redis:6379", "input/test.js"]
        #args: ["-i", "-t", "4", "-c", "16", "--stdout", "input/test.js"]
        workingDir: /workdir
#        volumeMounts:
#        - mountPath: /workdir/docs
#          name: docs-volume
#        - mountPath: /workdir/input
#          name: input-volume
#        - mountPath: /workdir/build
#          name: build-volume
##        - mountPath: /workdir/web
##          name: web-volume
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 18080
          name: http
        - containerPort: 10000
          name: internal
#      volumes:
#      - name: docs-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/docs
#      - name: input-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/input
#      - name: build-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/build
##      - name: web-volume
##        hostPath:
##          path: /home/trigen/projects/starcry/web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: starcry-web
  namespace: starcry
spec:
  selector:
    matchLabels:
      app: starcry-web
      tier: starcry
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: starcry-web
        tier: starcry
    spec:
      containers:
      - name: starcrycontainer
        image: rayburgemeestre/quasar-dev
        command: ["/bin/sh"]
        args: ["-c", "ls -al ./; /usr/local/bin/quasar dev"]
        workingDir: /app
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: starcry-web
  namespace: starcry
  labels:
    app: starcry-web
    tier: starcry
spec:
  type: NodePort
  ports:
  - port: 9000
    name: http
  selector:
    app: starcry-web
    tier: starcry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: starcry-workers
  namespace: starcry
spec:
  selector:
    matchLabels:
      app: starcry-workers
      tier: starcry
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: starcry-workers
        tier: starcry
    spec:
      initContainers:
      - name: check-starcry-reachable
        image: busybox:latest
        command: ['sh', '-c',
          'until nc -vz starcry 18080; do echo "Waiting for starcry rendering service"; sleep 2; done;']
      - name: check-redis-reachable
        image: busybox:latest
        command: ['sh', '-c',
          'until nc -vz redis 6379; do echo "Waiting for redis service"; sleep 2; done;']
      containers:
      - name: starcrycontainer
        # image: docker.io/rayburgemeestre/build-starcry-ubuntu:22.04
        image: docker.io/rayburgemeestre/starcry:v9
          #command: ["/workdir/build/starcry"]
        command: ["/workdir/docs/starcry-dev-wrapper.sh"]
          #command: ["/bin/bash"]
        args: ["--client", "tcp://redis:6379"]
          #args: ["-c", "sleep infinity"]
        workingDir: /workdir
        imagePullPolicy: IfNotPresent
#        volumeMounts:
#        - mountPath: /workdir/docs
#          name: docs-volume
#        - mountPath: /workdir/input
#          name: input-volume
#        - mountPath: /workdir/build
#          name: build-volume
##        - mountPath: /workdir/web
##          name: web-volume
#      volumes:
#      - name: docs-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/docs
#      - name: input-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/input
#      - name: build-volume
#        hostPath:
#          path: /home/trigen/projects/starcry/build
##      - name: web-volume
##        hostPath:
##          path: /home/trigen/projects/starcry/web
---
apiVersion: v1
kind: Service
metadata:
  name: starcry
  namespace: starcry
  labels:
    app: starcry
    tier: starcry
spec:
  type: NodePort
  ports:
  - port: 18080
    name: http
  - port: 10000
    name: internal
  selector:
    app: starcry
    tier: starcry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: starcry
spec:
  selector:
    matchLabels:
      app: redis
      tier: starcry
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: redis
        tier: starcry
    spec:
      containers:
        - name: redis
          image: redis:7.0.7
          command:
            - redis-server
            - "/redis-master/redis.conf"
          env:
            - name: MASTER
              value: "true"
          ports:
            - containerPort: 6379
              name: http
          #resources:
          #  limits:
          #    cpu: "0.1"
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
            - mountPath: /redis-master
              name: config
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: redis-config
            items:
              - key: redis-config
                path: redis.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: starcry
data:
  redis-config: |
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    client-output-buffer-limit pubsub 512mb 256mb 120
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: starcry
  labels:
    app: redis
    tier: starcry
spec:
  type: NodePort
  ports:
  - port: 6379
    name: http
  selector:
    app: redis
    tier: starcry
